use hemang ;
CREATE TABLE IF NOT EXISTS tags (
    Tagid INT NOT NULL AUTO_INCREMENT,
    TagName VARCHAR(50) NOT NULL,
    TagDes VARCHAR(500) NOT NULL,
    QCount INT NOT NULL,
    PRIMARY KEY (Tagid)
);
CREATE TABLE `accounts` (
  `user_id` int NOT NULL AUTO_INCREMENT,
  `username` varchar(50) NOT NULL,
  `password` varchar(255) NOT NULL,
  `email` varchar(100) NOT NULL,
  `profile` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb3;

CREATE TABLE `comment_count` (
  `id` int NOT NULL AUTO_INCREMENT,
  `user_id` int NOT NULL,
  `community_id` int NOT NULL,
  `comments_count` int NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `comment_cs_ibfk_1` (`user_id`),
  KEY `comment_cs_ibfk_2` (`community_id`),
  CONSTRAINT `comment_cs_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `accounts` (`user_id`) ON DELETE CASCADE,
  CONSTRAINT `comment_cs_ibfk_2` FOREIGN KEY (`community_id`) REFERENCES `communities` (`community_id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=53 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `comments` (
  `post_id` int NOT NULL,
  `user_id` int NOT NULL,
  `Datas` text NOT NULL,
  `comment_id` int NOT NULL AUTO_INCREMENT,
  `username` varchar(50) DEFAULT NULL,
  `profile` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`comment_id`),
  KEY `comments_ibfk_1` (`post_id`),
  KEY `comments_ibfk_2` (`user_id`),
  CONSTRAINT `comments_ibfk_1` FOREIGN KEY (`post_id`) REFERENCES `posts` (`post_id`) ON DELETE CASCADE,
  CONSTRAINT `comments_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `accounts` (`user_id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=64 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `communities` (
  `owned_by` varchar(100) NOT NULL,
  `community_id` int NOT NULL,
  `communityname` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`community_id`),
  UNIQUE KEY `communityname` (`communityname`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `comuser` (
  `user_id` int NOT NULL,
  `community_id` int NOT NULL,
  `serial_number` int NOT NULL AUTO_INCREMENT,
  `communityname` varchar(50) DEFAULT NULL,
  `username` varchar(50) DEFAULT NULL,
  `profile` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`serial_number`),
  KEY `comuser_ibfk_2` (`user_id`),
  KEY `comuser_ibfk_3` (`community_id`),
  CONSTRAINT `comuser_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `accounts` (`user_id`) ON DELETE CASCADE,
  CONSTRAINT `comuser_ibfk_3` FOREIGN KEY (`community_id`) REFERENCES `communities` (`community_id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `friends` (
  `serialnumber` int NOT NULL AUTO_INCREMENT,
  `friend_id` int NOT NULL,
  `user_id` int NOT NULL,
  `friendname` varchar(50) NOT NULL,
  `friendprofile` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`serialnumber`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `friends_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `accounts` (`user_id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `posts` (
  `post_id` int NOT NULL AUTO_INCREMENT,
  `user_id` int NOT NULL,
  `datas` text NOT NULL,
  `community_id` int NOT NULL,
  `genre` varchar(10) DEFAULT NULL,
  `postname` varchar(50) NOT NULL,
  `image_path` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`post_id`),
  UNIQUE KEY `postname` (`postname`),
  KEY `user_id` (`user_id`),
  KEY `community_id` (`community_id`),
  CONSTRAINT `posts_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `accounts` (`user_id`) ON DELETE CASCADE,
  CONSTRAINT `posts_ibfk_2` FOREIGN KEY (`community_id`) REFERENCES `communities` (`community_id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=28 DEFAULT CHARSET=utf8mb3;

CREATE TABLE `trend_count` (
  `id` int NOT NULL AUTO_INCREMENT,
  `community_id` int NOT NULL,
  `communityname` varchar(50) DEFAULT NULL,
  `posts_no` int NOT NULL DEFAULT '0',
  `tot_user` int NOT NULL DEFAULT '0',
  `comments_count` int NOT NULL DEFAULT '0',
  `tratio` decimal(65,10) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `tcs_ibfk_1` (`community_id`),
  CONSTRAINT `tcs_ibfk_1` FOREIGN KEY (`community_id`) REFERENCES `communities` (`community_id`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=105 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


CREATE TABLE IF NOT EXISTS users (
    Userid INT NOT NULL AUTO_INCREMENT,
    UserName VARCHAR(50) NOT NULL,
    UserEmail VARCHAR(50) NOT NULL,
    UserPass VARCHAR(200) NOT NULL,
    UserImg VARCHAR(2000) DEFAULT 'https://www.gravatar.com/avatar/8553c44cec56644d4c96707f562a1ec1?s=256&d=identicon&r=PG&f=1' ,
    UserAbout VARCHAR(5000),
    UserLocation VARCHAR(50),
    Rating INT DEFAULT 0,
    PRIMARY KEY (Userid)
);


CREATE TABLE IF NOT EXISTS questions (
    QuesId INT NOT NULL AUTO_INCREMENT,
    QuesTitle VARCHAR(200) NOT NULL,
    QuesDesc VARCHAR(5000) NOT NULL,
    QCreationTime DATETIME ,
    QuesScore INT NOT NULL,
    QuesTags JSON,
    UserId INT,
    FOREIGN KEY (UserId) REFERENCES users(UserId),
    PRIMARY KEY (QuesId)
);



CREATE TABLE IF NOT EXISTS answers (
    AnsId INT NOT NULL AUTO_INCREMENT,
    AnsDesc VARCHAR(5000) NOT NULL,
    AnsScore INT NOT NULL,
    UserId INT NOT NULL,
    ACreationTime DATETIME ,
    QuesId INT NOT NULL,

    FOREIGN KEY (UserId) REFERENCES users(UserId),
    FOREIGN KEY (QuesId) REFERENCES questions(QuesId),
    PRIMARY KEY (AnsId)
);



CREATE TABLE IF NOT EXISTS votes (
    VoteId INT NOT NULL AUTO_INCREMENT,
    UserId INT NOT NULL,
    AnsId INT NOT NULL,
    State INT NOT NULL,
    PRIMARY KEY (VoteId)
);



CREATE TABLE IF NOT EXISTS questionvotes (
    QVoteId INT NOT NULL AUTO_INCREMENT,
    QUserId INT NOT NULL,
    QuesId INT NOT NULL,
    QState INT NOT NULL,
    PRIMARY KEY (QVoteId)
);
